系统：Ubantu 20.04 (ROS版本为Neotic ）

安装的是libRealsenseSDK2.0 最新版本（今天2021/11/13 最新版本为libRealsense SDK2.0 v2.50.0)

Tips：不同SDK2.0版本对IntelRealsense-ros Wrapper的版本和相机的固件版本需求不同，具体可以参考我的这一篇

本文分为两大部分,分别安装 SDK2.0和 Wrapper

官方的libRealsense SDK2.0源码

https://github.com/IntelRealSense/librealsense/tags
安装方法在这个网站:

https://github.com/IntelRealSense/librealsense/blob/master/doc/distribution_linux.md
安装realsense SDK 2.0 最新版本

0.
sudo apt-get update && sudo apt-get upgrade && sudo apt-get dist-upgrade

1.注册服务器的公钥
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE || sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key F6E65AC044F831AC80A06380C8B3A55A6F3EFCDE
        如果报错:运行
export http_proxy="http://<proxy>:<port>"
         如果还是报错，可以参考下这个网站：
https://unix.stackexchange.com/questions/361213/unable-to-add-gpg-key-with-apt-key-behind-a-proxy

 2.将服务器添加到存储库列表中
sudo add-apt-repository "deb https://librealsense.intel.com/Debian/apt-repo $(lsb_release -cs) main" -u

3.安装
sudo apt-get install librealsense2-dkms
sudo apt-get install librealsense2-utils

 4.可选择性安装：如果需要使用开发者Developer 或者 Debug模式，可以再安装这两个
sudo apt-get install librealsense2-dev
sudo apt-get install librealsense2-dbg
Tip:安装了dev包后，可使用g++ -std=c++11 filename.cpp -lrealsense2 或 别的IDE来编译具有librealsense的应用程序

5.验证安装结果：
把相机接usb，在终端运行：
realsense-viewer
能出来一个应用页面，然后打开摄像机的开关，可以显示摄像机画面，就说明安装成功了

第二布:安装Realsense Wrapper
github上Realsense-ros Wrapper：
https://github.com/IntelRealSense/realsense-ros/tags
安装方法：
https://github.com/IntelRealSense/realsense-ros
1.首先确保ROS已经安装了(18.04要安装melodic版本的，20.04要安装noetic 的ros)
//18.04 
http://wiki.ros.org/melodic/Installation/Ubuntu
//20.04
http://wiki.ros.org/noetic/Installation/Ubuntu
可以参考这一篇在20.04上安装ros noetic:

详细介绍如何在ubuntu20.04中安装ROS系统，以及安装过程中出现的常见错误的解决方法，填坑！！！_慕羽★的博客-CSDN博客_ubuntu20.04安装教程

2.然后安装ROS版本的realsense2_camera：       

sudo apt-get install ros-$ROS_DISTRO-realsense2-camera
sudo apt-get install ros-$ROS_DISTRO-realsense2-description
  3.检验安装成功:usb连接相机,然后运行,如果能显示相机的节点信息就说明安装成功了.	
roslaunch realsense2_camera rs_camera.launch
————————————————

                            版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。
                        
原文链接：https://blog.csdn.net/qq_41754202/article/details/121318985

C++矩阵库
sudo apt-get install libeigen3-dev

opencv
第一步：依赖检测

sudo apt install build-essential
sudo apt install cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
sudo apt install python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev

安装opencv之前，直接执行上面的这三条命令，就可以完成依赖检测，相当于傻瓜式一键安装。
错误：E: 无法定位软件包 libjasper-dev
解决方案：

sudo add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"
sudo apt update
sudo apt install libjasper1 libjasper-dev

成功的解决了问题，其中libjasper1是libjasper-dev的依赖包

第二步：下载源代码
当我们执行完上面的三条命令后，代表安装opencv的所有依赖条件都满足了。我们先把源代码下载下来再说。

下载源代码

git clone https://github.com/opencv/opencv.git
git clone https://github.com/opencv/opencv_contrib.git

把源代码下载到你希望的文件夹中，并将opencv_contrib库移到opencv文件夹下

注意，opencv有两个，一个是核心库，一个是贡献库，贡献库中有一些最新的功能。最好在第一次安装时就把两个都装上，别到时候又回来重新装。opencv_contrib库用处也很多。

第三步：编译
为什么还要编译？不能直接用吗？当然不行，我们下载下来的只是源代码，也就是一堆.h .cpp文件，你必须编译成.a文件(静态库)或者.so文件(动态库)别人才能用啊。所以开始编译吧。

先创建一个build文件夹用来存放.so文件

cd ~/opencv
mkdir build
cd build

开始编译吧

cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/local -D OPENCV_EXTRA_MODULES_PATH=../opencv_contrib/modules -D DOPENCV_GENERATE_PKGCONFIG=ON ..

这个命令是最最重要的了，花10分钟仔细看看都值得。-CMAKE_BUILD_TYPE=Release代表你想编release版本还是debug版本。CMAKE_INSTALL_PREFIX是你的.so文件最终放在哪（安装完后查看/usr/local/lib文件下一定有opencv的库文件在）。还有其他选项，如OPENCV_EXTRA_MODULES_PATH = …/opencv_contrib/modules，代表同时编译贡献库。-DOPENCV_GENERATE_PKGCONFIG=ON用来生成.pc文件，这个选项一定要加。

安装编译库，可能是为了把库安装到系统目录下

sudo make install
sudo ldconfig

第四步：验证

pkg-config --modversion opencv

以上一系列命令可以闭着眼睛执行，都是线性的，注意一下粗体字就行。如果中间哪一步出错，百度一下就可以，一般问题不大。把安装步骤详细记录下来，这样以后换环境可以快速部署。


————————————————

                            版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。
                        
原文链接：https://blog.csdn.net/BigData_Mining/article/details/111826692
